geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len, lab = "aej")
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len, label = "aej")
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len, labels = "aej")
labels()# The process of Singular Value Decomposition clearly indicates that exists only two main
labels(x= "jajhbj")# The process of Singular Value Decomposition clearly indicates that exists only two main
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len, labels = "aej")+
labels(x= "jajhbj")
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len, labels = "aej")+
labels(object = "ceve")
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len, labels = "aej") +
labels(object = "ceve")
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
labels(object = "ceve")+
aes((cumsum(d)/sum(d)),len, labels = "aej") +
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
labels(object = "ceve")+
aes((cumsum(d)/sum(d)),len, labels = "aej")
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
labels(object = "ceve")+
aes((cumsum(d)/sum(d)),len, labels = "aej")
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = c("dfs","vsd"))
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = c("dfs","vsd"))
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = c("dfs"))
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = ("dfs"))
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = ("dfs"))+
geom_label()
ggplot(data = data_exam_panel, aes(x = ly)) +
geom_histogram(aes(y =..density..),color="white", fill = 'thistle2', alpha=0.8, binwidth = 0.9) +
stat_function(fun = dnorm, color = 'black', args = list(mean = mean(data_exam_panel$ly), sd = sd(data_exam_panel$ly)))+
labs(x = "ly:  Logarithm of output by firm", y ='Density') +
theme_minimal()
ly:  Logarithm of output by firm
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = ("dfs"))+
labs(x = "ly:  Logarithm of output by firm", y ='Density')
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='Density')
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
aes(d,len, label = ("dfs")+
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(d,len, label = "dfs")+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = "dfs")+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = "dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(d,len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
)
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_lab
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_lab
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
labs(x = "lennght of m", y ='log of sigmas') +
aes((cumsum(d)/sum(d)),len)
warnings()
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
labs(x = "lennght of m", y ='log of sigmas') +
aes((cumsum(d)/sum(d)),len)
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_bw()+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len)+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len)+
labs(x = "lennght of m", y ='log of sigmas')
(cumsum(d)/sum(d))
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)))+
labs(x = "cumulative sum of sigmas over sum of sigmas", y ='log of sigmas')
(cumsum(d)/sum(d))
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len)+
labs(x = "cumulative sum of sigmas over sum of sigmas", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len)+
labs(x = "", y ='cumulative sum of sigmas over sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len)+
labs(x = "", title = 'cumulative sum of sigmas over sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len)+
labs(x = "", title = 'Cumulative sum of sigmas over sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len)+
labs(x = "", title = 'Cumulative sum of sigmas over the sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len)+
labs(x = "", x='Cumsum(s)/sum(s)',title = 'Cumulative sum of sigmas over the sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len)+
labs(x = "", x="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes((cumsum(d)/sum(d)),len)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes(log(cumsum(d)/sum(d))),len)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes(log(cumsum(d)/sum(d)),len)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
log(cumsum(d)/sum(d))
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
aes(log(cumsum(d)/sum(d)),len)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
log10(cumsum(d)/sum(d))
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point()
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point()+
aes(log(cumsum(d)/sum(d)),len)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "red")+
aes(log(cumsum(d)/sum(d)),len)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(cumsum(d)/sum(d)),len)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(cumsum(d)/sum(d)),len)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
library(ggplot2)
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(cumsum(d)/sum(d)),len)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(cumsum(d)/sum(d)),len)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
sum(d)
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(d),len, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
# the cumulative sum of sigmas over its actual total sum of sigmas. we can clearly
# see how just the first two sigmas cover more than 80% of the total information.
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(cumsum(d)/sum(d)),len)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
library(Matrix)
library(readr)
library(matlib)
library(plm)
data6 <- read_csv("Downloads/OneDrive_1_28-10-2020/data6.csv", col_types = cols(X1 = col_skip()))
rankMatrix(data6)
svd_data <- svd(data6)
U <- svd_data$u
V <- svd_data$v
Vt <- t(svd_data$v)
D <- diag(svd_data$d, nrow = 5,ncol = 5)
d <- svd_data$d
M <- U%*%D%*%Vt
rankMatrix(M)
svd_data <- svd(data6, nu=2,nv=2)
U <- svd_data$u
V <- svd_data$v
Vt <- t(svd_data$v)
D <- diag(svd_data$d, nrow = 2,ncol = 2)
M <- U%*%D%*%Vt
rankMatrix(M)
Mr <- echelon(M, reduced = T, verbose= T)
#Frobenius norm
sqrt(sum((M - data6)**2))
library(ggplot2)
len_d<- c(1,2,3,4,5)
# We can clearly see how in the first two sigmas is concentrated the power of information
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(d),len_d, label = ("dfs"))+
labs(x = "lennght of m", y ='log of sigmas')
# the cumulative sum of sigmas over its actual total sum of sigmas. we can clearly
# see how just the first two sigmas cover more than 80% of the total information.
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(cumsum(d)/sum(d)),len_d)+
labs(x = "", y="Cumsum(s)/sum(s)",title = 'Cumulative sum of sigmas over the sum of sigmas')
# The process of Singular Value Decomposition clearly indicates that exists only two main
# "concepts" or groups of customers, the first group is mainly concerned with what we can call Services
# i.e. the services speed and the availability of parking. The second group is mainly concerned with
# the variety of courses.
#let's look for the similarity of the other users:
Scores_users<-M%*%svd_data$v
Scores_users
#let's compute scores in the "movies space"
as.integer(data6[1,])%*%svd_data$v%*%Vt
#compute cos(theta) between Quincy and all other users
#similarity<-c()
#library(pracma) #needed for dot product
#for (i in c(1:dim(Scores_users)[1])){
#       similarity[i]<-dot(scoreq,Scores_users[i,])/(sqrt(sum(scoreq^2)*sum((Scores_users[i,])^2)))
#}
#similarity
d <- svd_data$d
d
sum(d)
sum(d**2)
d
d
d**2
sum(d**2)
sum(d[1:2]**2)
sqrt(sum(d**2))
sqrt(sum(d[1:2]**2))
sqrt(sum(d**2))-sqrt(sum(d[1:2]**2))
#Frobenius norm
sqrt(sum((M - data6)**2))
#Frobenius norm
sqrt(sum((data6)**2))
#Frobenius norm
sqrt(sum((data6)**2))
#Frobenius norm
sqrt(sum((data6)**2))
sqrt(sum(d**2))-sqrt(sum(d[1:2]**2))
#Frobenius norm
sqrt(sum((data6- M)**2))
Scores_users
c(1:10)
library(Matrix)
library(readr)
library(matlib)
library(plm)
library(stargazer)
library(pheatmap)
library(pracma)
setwd("~/Documents/Data Science and Economics /Graph Theory/Assign_2")
data6 <- read_csv("data6.csv", col_types = cols(X1 = col_skip()))
rankMatrix(data6)
svd_data <- svd(data6)
# Plot heatmap of dataset
pheatmap(data6, how_colnames=T, show_colnames=T, cluster_rows = F, cluster_cols = T, display_numbers=T, legend=F)
# Compute SVD
U <- svd_data$u
V <- svd_data$v
Vt <- t(svd_data$v)
D <- diag(svd_data$d, nrow = 5,ncol = 5)
d <- svd_data$d
pheatmap(D,cluster_rows = F,cluster_cols = F,legend = F,display_numbers = T)
# Compute SVD
svd_data <- svd(data6, nu=2,nv=2)
U <- svd_data$u
V <- svd_data$v
Vt <- t(svd_data$v)
D <- diag(svd_data$d, nrow = 2,ncol = 2)
U <- as.matrix(U)
# Print Matrix in Latex
stargazer(U,type = "latex")
stargazer(Vt,type = "latex")
stargazer(D,type = "latex")
stargazer(Mb, type = "latex")
Mb <- U%*%D%*%Vt
rankMatrix(Mb)
#Frobenius norm
sqrt(sum((data6 - Mb)**2))
sqrt(sum(d**2))
sqrt(sum(d[1:2]**2))
library(ggplot2)
len_d<- c(1,2,3,4,5)
# We can clearly see how in the first two sigmas is concentrated the power of information
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(log(d),len_d, label = ("dfs"))+
labs(x = "log of sigmas", y ='j')
# the cumulative sum of sigmas over its actual total sum of sigmas. we can clearly
# see how just the first two sigmas cover more than 80% of the total information.
ggplot()+
geom_smooth(col="darkred")+
theme_minimal()+
geom_point(col= "darkred")+
aes(cumsum(d)/sum(d),len_d)+
labs(x = "Cumulative sum of sigmas over the sum of sigmas", y="j",title = '')
# The process of Singular Value Decomposition clearly indicates that exists only two main
# "concepts" or groups of customers, the first group is mainly concerned with what we can call Services
# i.e. the services speed and the availability of parking. The second group is mainly concerned with
# the variety of courses.
Mb<- `row.names<-`(Mb,c("1","2","3","4","5","6","7","8","9","10",'11','12','13','14','15'))
pheatmap(Mb,how_colnames=T, cluster_rows = T, cluster_cols = F, display_numbers=T, legend=F, show_rownames = T,how_rownames = T)
#let's look for the similarity of the other users:
Scores_users<-Mb%*%svd_data$v
Scores_users<- `row.names<-`(Scores_users,c("1","2","3","4","5","6","7","8","9","10",'11','12','13','14','15'))
pheatmap(Scores_users,cluster_rows = T,cluster_cols = F,display_numbers=T, legend=F, show_rownames = T,how_colnames=T)
# compute cos(theta) all users
# Compute and plot similarity matrix
similarity <- matrix(NA, nrow = 15, ncol = 15)
for (i in c(1:15)){
for (j in c(1:15)){
similarity[i, j]<-dot(S[i,],S[j,])/(sqrt(sum(S[i,]^2)*sum((S[j,])^2)))
}
}
Mb <- U%*%D%*%Vt
Mb
#let's look for the similarity of the other users:
Scores_users<-Mb%*%svd_data$v
Scores_users<- `row.names<-`(Scores_users,c("1","2","3","4","5","6","7","8","9","10",'11','12','13','14','15'))
pheatmap(Scores_users,cluster_rows = T,cluster_cols = F,display_numbers=T, legend=F, show_rownames = T,how_colnames=T)
pheatmap(Scores_users,cluster_rows = T,cluster_cols = F,display_numbers=T, legend=F, show_rownames = T,how_colnames=T, height = 0)
pheatmap(Scores_users,cluster_rows = T,cluster_cols = F,display_numbers=T, legend=F, show_rownames = T,how_colnames=T, height = 0)
pheatmap(Scores_users,cluster_rows = T,cluster_cols = F,display_numbers=T, legend=F, show_rownames = T,how_colnames=T, treeheight_row = 0 )
# Plot heatmap of dataset
pheatmap(data6, how_colnames=T, show_colnames=T, cluster_rows = F, cluster_cols = T, display_numbers=T, legend=F)
# Plot heatmap of dataset
pheatmap(data6, how_colnames=T, show_colnames=T, cluster_rows = F, cluster_cols = T, display_numbers=T, legend=F, treeheight_col = 0)
#let's look for the similarity of the other users:
Scores_users<-Mb%*%svd_data$v
Scores_users<- `row.names<-`(Scores_users,c("1","2","3","4","5","6","7","8","9","10",'11','12','13','14','15'))
pheatmap(Scores_users,cluster_rows = T,cluster_cols = F,display_numbers=T, legend=F, show_rownames = T,how_colnames=T, treeheight_row = 0 )
# compute cos(theta) all users
# Compute and plot similarity matrix
similarity <- matrix(NA, nrow = 15, ncol = 15)
for (i in c(1:15)){
for (j in c(1:15)){
similarity[i, j]<-dot(S[i,],S[j,])/(sqrt(sum(S[i,]^2)*sum((S[j,])^2)))
}
}
S <- Scores_users
# compute cos(theta) all users
# Compute and plot similarity matrix
similarity <- matrix(NA, nrow = 15, ncol = 15)
for (i in c(1:15)){
for (j in c(1:15)){
similarity[i, j]<-dot(S[i,],S[j,])/(sqrt(sum(S[i,]^2)*sum((S[j,])^2)))
}
}
View(similarity)
stargazer(similarity, type = "latex")
similarity
